name: Release
on:
  push:
    branches:
    tags:

jobs: 
  release:
    name: Release
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    - name: Dump context
      uses: actions/github-script@v5
      with:
        script: console.log(context)    
        
    - name: Log in to the Container registry
      if: contains(github.ref,'tag')
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_ACCOUNT }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Log in to the Container registry
      if: contains(github.ref,'tag')
      uses: docker/login-action@v1
      with:
        registry: registry.gitlab.com
        username: ${{ secrets.GITLAB_ACCOUNT }}
        password: ${{ secrets.GITLAB_TOKEN }} 

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Extract metadata (tags, labels) for Docker
      id: meta-deploy
      uses: docker/metadata-action@v3
      with:
        images: iaacautomation/deploy

    - name: Build and push Docker image for deploy
      uses: docker/build-push-action@v2
      with:
        context: deploy
        push: contains(github.ref,'tag')
        tags: |
          ${{ steps.meta-deploy.outputs.tags }}
          registry.gitlab.com/${{ steps.meta-deploy.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        build-args: DISTRO=bookworm

    - name: Extract metadata (tags, labels) for Docker
      id: meta-diagnose
      uses: docker/metadata-action@v3
      with:
        images: iaacautomation/diagnose

    - name: Build and push Docker image for diagnostics
      uses: docker/build-push-action@v2
      with:
        context: diagnose
        push: contains(github.ref,'tag')
        tags: |
          ${{ steps.meta-diagnose.outputs.tags }}
          registry.gitlab.com/${{ steps.meta-diagnose.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        build-args: DISTRO=bookworm