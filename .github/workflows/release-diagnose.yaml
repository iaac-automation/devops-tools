name:  Build and Release Diagnose Image
on:
  push:
    branches:
    tags:

jobs: 
  release:
    name:  Build and Release Diagnose Image
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    - name: Dump context
      uses: actions/github-script@v5
      with:
        script: console.log(context)    
        
    - name: Log in to the Container registry
      if: contains(github.ref,'tag')
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_ACCOUNT }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Log in to the Container registry
      if: contains(github.ref,'tag')
      uses: docker/login-action@v1
      with:
        registry: registry.gitlab.com
        username: ${{ secrets.GITLAB_ACCOUNT }}
        password: ${{ secrets.GITLAB_TOKEN }} 

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Get tag
      if: contains(github.ref,'tag')
      id: tag
      uses: dawidd6/action-get-tag@v1
    
    - name: Test Build for diagnose
      uses: docker/build-push-action@v2
      with:
        context: diagnose
        push: ${{ contains(github.ref,'tag') }}
        tags: |
          iaacautomation/diagnose:test
          registry.gitlab.com/iaacautomation/devops-tools/diagnose:test
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        build-args: DISTRO=bookworm-slim
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push Docker image for diagnose
      if: contains(github.ref,'tag')
      uses: docker/build-push-action@v2
      with:
        context: diagnose
        push: ${{ contains(github.ref,'tag') }}
        tags: |
          iaacautomation/diagnose:${{steps.tag.outputs.tag}}
          registry.gitlab.com/iaacautomation/devops-tools/diagnose:${{steps.tag.outputs.tag}}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        build-args: DISTRO=bookworm-slim
        cache-from: type=gha